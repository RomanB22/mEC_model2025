// Code for Oscillation CHECK for valid models from GSA without update_init().
// 5 s period is given for the letting the RMP settle down.
// sub-threshold measurements : 1. RMP_mean, 2. RMP_SD, 3. sag ratio, 4. Input resistance, 5. Resonance amplitude, 6. Resonance frequency
// supra-threshold measurements: 1. f100, 2. f400, 3. spike max, 4. spike width at half maximum, 5. spike threshold.
// total 55 parameters, including vhalf, slope, taufactor and the conductance for each channel.
// Channels included: Naf, KDR, HCN, Nap, Ka, HVA, LVA, Km, sk
// Calcium decay: Cad mechanims
// Rm and Cm

// creating single compartment soma, setting temperature, inserting all channels and setting v_init, ek and ena.

load_file("nrngui.hoc") 

steps_per_ms= 40
dt= 0.025

create soma
access soma
celsius=34

soma nseg = 1
soma diam = 70
soma L = 75

soma{
	
	gnafbar		= 0.0025
	nafmvhalf	= -26.138
	nafmslope	= 9.3829 
	nafmfactor	= 1
	nafhvhalf	= -23.774
	nafhslope	= 6.108
	nafhfactor  = 1
	
	gkdrbar		= 0.0036
	kdrnvhalf   = -17.655
	kdrnslope   = 19.655
	kdrnfactor  = 1
	
	ghcnsbar	= 3.5e-5
	hcnratio	= 1.85
	hcnmifo		= 74.2
	hcnmiso		= 2.83
	hcnmifd		= 9.78
	hcnmisd		= 15.9
	hcnffactor  = 1
	hcnsfactor	= 1
	
	gnapbar		= 4.2e-5
	napmvhalf	= 48.7
	napmslope	= 4.4 
	napmfactor	= 1
	naphvhalf	= 48.8
	naphslope	= 9.98
	naphfactor  = 1
	
	gkabar		= 3e-5
	kamvhalf	= -18.3
	kamslope	= 15 
	kamfactor	= 1
	kahvhalf	= -58
	kahslope	= 8.2
	kahfactor	= 1
	
	ghvabar		= 9e-5
	hvamvhalf	= 11.1
	hvamslope	= 8.4 
	hvamfactor	= 1
	hvahvhalf	= 37
	hvahslope	= 9
	hvahfactor  = 1

	
	glvabar		= 9e-5
	lvamvhalf	= -52.431
	lvamslope	= 8.2023 
	lvamfactor	= 1
	lvahvhalf	= -88.165
	lvahslope	= 6.6772
	lvahfactor  = 1
	
	gkmbar		= 7e-5
	kmvhalfl	= -40
	kmkl		= -10 
	kmmfactor	= 1
	
	gskbar		= 0.0001
	
	Rm			= 40000
	
	tauca		= 50
	
	CM			= 1

// inserting channels and providing parameters

	insert NaT
	gmax_NaT	= gnafbar
	mvhalf_NaT	= nafmvhalf
	mslope_NaT	= nafmslope
	mfactor_NaT	= nafmfactor 
	hvhalf_NaT	= nafhvhalf
	hslope_NaT	= nafhslope
	hfactor_NaT	= nafhfactor
	
	
	insert KDR
	gmax_KDR	= gkdrbar
	nvhalf_KDR	= kdrnvhalf
	nslope_KDR	= kdrnslope
	nfactor_KDR = kdrnfactor
	
	
	insert ih
	gslowbar_ih	= ghcnsbar
	gfastbar_ih	= hcnratio*ghcnsbar
	mifo_ih		= hcnmifo
	miso_ih		= hcnmiso
	mifd_ih		= hcnmifd
	misd_ih		= hcnmisd
	ffactor_ih	= hcnffactor
	sfactor_ih	= hcnsfactor
	
	
	insert NaP
	gbar_NaP	= gnapbar
	mvhalf_NaP	= napmvhalf
	mslope_NaP	= napmslope
	mfactor_NaP	= napmfactor 
	hvhalf_NaP	= naphvhalf
	hslope_NaP	= naphslope
	hfactor_NaP	= naphfactor
	

	insert KA
	gmax_KA		= gkabar
	mvhalf_KA	= kamvhalf
	mslope_KA	= kamslope
	mfactor_KA	= kamfactor 
	hvhalf_KA	= kahvhalf
	hslope_KA	= kahslope
	hfactor_KA	= kahfactor
	
	
	insert HVA
	gmax_HVA	= ghvabar
	mvhalf_HVA	= hvamvhalf
	mslope_HVA	= hvamslope
	mfactor_HVA	= hvamfactor 
	hvhalf_HVA	= hvahvhalf
	hslope_HVA	= hvahslope
	hfactor_HVA	= hvahfactor


	insert LVA
	glvabar_LVA = glvabar
	mvhalf_LVA	= lvamvhalf
	mslope_LVA	= lvamslope
	mfactor_LVA	= lvamfactor 
	hvhalf_LVA	= lvahvhalf
	hslope_LVA	= lvahslope
	hfactor_LVA	= lvahfactor
	
 
	insert km
	gbar_km		= gkmbar
	vhalfl_km	= kmvhalfl
	kl_km		= kmkl
	mfactor_km	= kmmfactor

	insert skkin
	gbar_skkin = gskbar

	insert pas
	g_pas=1/Rm

	insert cad
	tauca_cad=tauca

	cm = CM
	
}
	v_init = -77	// from Boehlen et al 2012/13 JNP
	e_pas = -77
	ek = -90
	ena = 50


/**************************************************************/
// initallizing

proc initsub() {
    finitialize(v_init)
	fcurrent()
}
	
/**************************************************************/
// Oscillation at different Voltage levels (injecting current from 15 pA to 300 pA)

load_file("stdlib.hoc")    //loading standard library

objref v_osc, v1_osc ,stim, stim2
objref f_osc 
strdef s_osc

proc Osc_run(){
	
	delay = 5000
	rmpdelay = 1000
	duration = 5000

	tstop = delay+rmpdelay+duration
	
	stim = new IClamp(0.5)
	stim2 = new IClampnoise(0.5)
	
	for(i=0.1;i<=0.3; i+=0.010){
	
		stim.del = delay+rmpdelay
		stim2.del = delay+rmpdelay
		
		stim.dur = duration
		stim2.dur = duration
		
		stim.amp = i
		stim2.bias = -1
		
		for(j=0.03;j<=0.5; j*=2){ 
			stim2.std = j//*i// i dont know why i put the multiplicative noise instead of additive
		
		
			print i,j
	
		sprint(s_osc, "Output/Osc_july/Osc_%d_%f_%f.txt",simulno,i,j)
		f_osc = new File()
		f_osc.wopen(s_osc)
			
		v_osc = new Vector()
		v_osc.record(&soma.v(0.5))
		
		finitialize(v_init)
		fcurrent()
		
		while (t < tstop){
			fadvance()
		}		
		
		v1_osc = new Vector()
		v1_osc.copy(v_osc, ((delay+rmpdelay)/dt)-1, ((delay+rmpdelay+duration)/dt)-1)
		
		v1_osc.printf(f_osc)
		f_osc.close()
		}
	}
}

/**************************************************************/
// update procedures


proc update_gnafbar() {
	gmax_NaT	= gnafbar*1e-09
	print gmax_NaT
}

proc update_nafmvhalf() {
	mvhalf_NaT	= nafmvhalf
	print mvhalf_NaT
}

proc update_nafmslope() {
	mslope_NaT	= nafmslope
	print mslope_NaT
}

proc update_nafmfactor() {
	mfactor_NaT	= nafmfactor
	print mfactor_NaT	
}

proc update_nafhvhalf() {
	hvhalf_NaT	= nafhvhalf
	print hvhalf_NaT
}

proc update_nafhslope() {
	hslope_NaT	= nafhslope
	print hslope_NaT
}

proc update_nafhfactor() {
	hfactor_NaT	= nafhfactor
	print hfactor_NaT
}

proc update_gkdrbar() {
	gmax_KDR	= gkdrbar*1e-09
	print gmax_KDR
}

proc update_kdrnvhalf() {
	nvhalf_KDR	= kdrnvhalf
	print nvhalf_KDR
}

proc update_kdrnslope() {
	nslope_KDR	= kdrnslope
	print nslope_KDR
}

proc update_kdrnfactor() {
	nfactor_KDR = kdrnfactor
	print nfactor_KDR
}

proc update_ghcnsbar() {
	gslowbar_ih	= ghcnsbar*1e-09
	print gslowbar_ih
}

proc update_hcnratio() {
	gfastbar_ih	= hcnratio*(ghcnsbar*1e-09)
	print gfastbar_ih
}

proc update_hcnmifo() {
	mifo_ih		= hcnmifo
	print mifo_ih
}

proc update_hcnmiso() {
	miso_ih		= hcnmiso
	print miso_ih
}

proc update_hcnmifd() {
	mifd_ih		= hcnmifd
	print mifd_ih
}

proc update_hcnmisd() {
	misd_ih		= hcnmisd
	print misd_ih
}

proc update_hcnffactor() {
	ffactor_ih	= hcnffactor
	print ffactor_ih
}

proc update_hcnsfactor() {
	sfactor_ih	= hcnsfactor
	print sfactor_ih
}

proc update_gnapbar() {
	gbar_NaP	= gnapbar*1e-09
	print gbar_NaP
}

proc update_napmvhalf() {
	mvhalf_NaP	= napmvhalf
	print mvhalf_NaP
}

proc update_napmslope() {
	mslope_NaP	= napmslope
	print mslope_NaP
}

proc update_napmfactor() {
	mfactor_NaP	= napmfactor
	print mfactor_NaP
}

proc update_naphvhalf() {
	hvhalf_NaP	= naphvhalf
	print hvhalf_NaP
}

proc update_naphslope() {
	hslope_NaP	= naphslope
	print hslope_NaP
}

proc update_naphfactor() {
	hfactor_NaP	= naphfactor
	print hfactor_NaP
}

proc update_gkabar() {
	gmax_KA		= gkabar*1e-09
	print gmax_KA
}

proc update_kamvhalf() {
	mvhalf_KA	= kamvhalf
	print mvhalf_KA
}

proc update_kamslope() {
	mslope_KA	= kamslope
	print mslope_KA
}

proc update_kamfactor() {
	mfactor_KA	= kamfactor
	print mfactor_KA
}

proc update_kahvhalf() {
	hvhalf_KA	= kahvhalf
	print hvhalf_KA 
}

proc update_kahslope() {
	hslope_KA	= kahslope
	print hslope_KA
}

proc update_kahfactor() {
	hfactor_KA	= kahfactor
	print hfactor_KA
}

proc update_ghvabar() {
	gmax_HVA	= ghvabar*1e-09
	print gmax_HVA
}

proc update_hvamvhalf() {
	mvhalf_HVA	= hvamvhalf
	print mvhalf_HVA
}

proc update_hvamslope() {
	mslope_HVA	= hvamslope
	print mslope_HVA
}

proc update_hvamfactor() {
	mfactor_HVA	= hvamfactor
	print mfactor_HVA
}

proc update_hvahvhalf() {
	hvhalf_HVA	= hvahvhalf
	print hvhalf_HVA
}

proc update_hvahslope() {
	hslope_HVA	= hvahslope
	print hslope_HVA
}

proc update_hvahfactor() {
	hfactor_HVA	= hvahfactor
	print hfactor_HVA
}

proc update_glvabar() {
	glvabar_LVA	= glvabar*1e-09
	print glvabar_LVA
}

proc update_lvamvhalf() {
	mvhalf_LVA	= lvamvhalf
	print mvhalf_LVA
}

proc update_lvamslope() {
	mslope_LVA	= lvamslope
	print mslope_LVA
}

proc update_lvamfactor() {
	mfactor_LVA	= lvamfactor
	print mfactor_LVA
}

proc update_lvahvhalf() {
	hvhalf_LVA	= lvahvhalf
	print hvhalf_LVA
}

proc update_lvahslope() {
	hslope_LVA	= lvahslope
	print hslope_LVA
}

proc update_lvahfactor() {
	hfactor_LVA	= lvahfactor
	print hfactor_LVA
}

proc update_gkmbar() {
	gbar_km		= gkmbar*1e-09
	print gbar_km
}
proc update_kmvhalfl() {
	vhalfl_km	= kmvhalfl
	print vhalfl_km
}

proc update_kmkl() {
	kl_km		= kmkl
	print kl_km
}

proc update_kmmfactor() {
	mfactor_km	= kmmfactor
	print mfactor_km
}

proc update_gskbar() {
	gbar_skkin = gskbar*1e-09
	print gbar_skkin
}

proc update_gpas() {
	g_pas=1/Rm
	print g_pas
}

proc update_tauca() {
	tauca_cad=tauca
	print tauca_cad
}

proc update_CM() {
	cm = CM
	print cm
}

/**************************************************************/

// File handling
// Picking file for each parameter (55 parameters) and valid models

strdef filename1, filename2, filename3, filename4, filename5, filename6, filename7, filename8, filename9, filename10
strdef filename11, filename12, filename13, filename14, filename15, filename16, filename17, filename18, filename19, filename20 
strdef filename21, filename22, filename23, filename24, filename25, filename26, filename27, filename28, filename29, filename30 
strdef filename31, filename32, filename33, filename34, filename35, filename36, filename37, filename38, filename39, filename40 
strdef filename41, filename42, filename43, filename44, filename45, filename46, filename47, filename48, filename49, filename50
strdef filename51, filename52, filename53, filename54, filename55 

objref f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, f15, f16, f17, f18, f19, f20
objref f21,f22, f23, f24, f25, f26, f27, f28, f29, f30, f31, f32, f33, f34, f35, f36, f37, f38, f39, f40
objref f41, f42, f43, f44, f45, f46, f47, f48, f49, f50, f51, f52, f53, f54, f55

objref v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20
objref v21,v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40
objref v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55

proc open_files(){
	
	print "simulation no:", simulno
	
	f1 = new File()
	sprint(filename1,"waves/gNaf_july.txt")
	f1.ropen(filename1)
	v1 = new Vector()
	v1.scanf(f1)
	
	f2 = new File()
	sprint(filename2,"waves/nafmvhalf_july.txt")
	f2.ropen(filename2)
	v2 = new Vector()
	v2.scanf(f2)
		
	f3 = new File()
	sprint(filename3,"waves/nafmslope_july.txt")
	f3.ropen(filename3)
	v3 = new Vector()
	v3.scanf(f3)
	
	f4 = new File()
	sprint(filename4,"waves/nafmfactor_july.txt")
	f4.ropen(filename4)
	v4 = new Vector()
	v4.scanf(f4)	
	
	f5 = new File()
	sprint(filename5,"waves/nafhvhalf_july.txt")
	f5.ropen(filename5)
	v5 = new Vector()
	v5.scanf(f5)
	
	f6 = new File()
	sprint(filename6,"waves/nafhslope_july.txt")
	f6.ropen(filename6)
	v6 = new Vector()
	v6.scanf(f6)
	
	f7 = new File()
	sprint(filename7,"waves/nafhfactor_july.txt")
	f7.ropen(filename7)
	v7 = new Vector()
	v7.scanf(f7)			
	
	
	
	f8 = new File()
	sprint(filename8,"waves/gKDR_july.txt")
	f8.ropen(filename8)
	v8 = new Vector()
	v8.scanf(f8)

	f9 = new File()
	sprint(filename9,"waves/kdrnvhalf_july.txt")
	f9.ropen(filename9)
	v9 = new Vector()
	v9.scanf(f9)
	
	f10 = new File()
	sprint(filename10,"waves/kdrnslope_july.txt")
	f10.ropen(filename10)
	v10 = new Vector()
	v10.scanf(f10)
	
	f11 = new File()
	sprint(filename11,"waves/kdrnfactor_july.txt")
	f11.ropen(filename11)
	v11 = new Vector()
	v11.scanf(f11)	
	
	
	f12 = new File()
	sprint(filename12,"waves/gHCN_july.txt")
	f12.ropen(filename12)
	v12 = new Vector()
	v12.scanf(f12)
		
	f13 = new File()
	sprint(filename13,"waves/hcnratio_july.txt")
	f13.ropen(filename13)
	v13 = new Vector()
	v13.scanf(f13)
	
	f14 = new File()
	sprint(filename14,"waves/hcnmifo_july.txt")
	f14.ropen(filename14)
	v14 = new Vector()
	v14.scanf(f14)	
	
	f15 = new File()
	sprint(filename15,"waves/hcnmiso_july.txt")
	f15.ropen(filename15)
	v15 = new Vector()
	v15.scanf(f15)

	f16 = new File()
	sprint(filename16,"waves/hcnmifd_july.txt")
	f16.ropen(filename16)
	v16 = new Vector()
	v16.scanf(f16)
	
	f17 = new File()
	sprint(filename17,"waves/hcnmisd_july.txt")
	f17.ropen(filename17)
	v17 = new Vector()
	v17.scanf(f17)
	
	f18 = new File()
	sprint(filename18,"waves/hcnffactor_july.txt")
	f18.ropen(filename18)
	v18 = new Vector()
	v18.scanf(f18)
		
	f19 = new File()
	sprint(filename19,"waves/hcnsfactor_july.txt")
	f19.ropen(filename19)
	v19 = new Vector()
	v19.scanf(f19)

	f20 = new File()
	sprint(filename20,"waves/gNap_july.txt")
	f20.ropen(filename20)
	v20 = new Vector()
	v20.scanf(f20)
	
	f21 = new File()
	sprint(filename21,"waves/napmvhalf_july.txt")
	f21.ropen(filename21)
	v21 = new Vector()
	v21.scanf(f21)
	
	f22 = new File()
	sprint(filename22,"waves/napmslope_july.txt")
	f22.ropen(filename22)
	v22 = new Vector()
	v22.scanf(f22)
	
	f23 = new File()
	sprint(filename23,"waves/napmfactor_july.txt")
	f23.ropen(filename23)
	v23 = new Vector()
	v23.scanf(f23)
	
	f24 = new File()
	sprint(filename24,"waves/naphvhalf_july.txt")
	f24.ropen(filename24)
	v24 = new Vector()
	v24.scanf(f24)	
	
	f25 = new File()
	sprint(filename25,"waves/naphslope_july.txt")
	f25.ropen(filename25)
	v25 = new Vector()
	v25.scanf(f25)

	f26 = new File()
	sprint(filename26,"waves/naphfactor_july.txt")
	f26.ropen(filename26)		
	v26 = new Vector()
	v26.scanf(f26)				
																	
	f27 = new File()
	sprint(filename27,"waves/gKA_july.txt")
	f27.ropen(filename27)
	v27 = new Vector()
	v27.scanf(f27)
	
	f28 = new File()
	sprint(filename28,"waves/kamvhalf_july.txt")
	f28.ropen(filename28)
	v28 = new Vector()
	v28.scanf(f28)	
	
	f29 = new File()
	sprint(filename29,"waves/kamslope_july.txt")
	f29.ropen(filename29)
	v29 = new Vector()
	v29.scanf(f29)
	
	f30 = new File()
	sprint(filename30,"waves/kamfactor_july.txt")
	f30.ropen(filename30)
	v30 = new Vector()
	v30.scanf(f30)
	
	f31 = new File()
	sprint(filename31,"waves/kahvhalf_july.txt")
	f31.ropen(filename31)
	v31 = new Vector()
	v31.scanf(f31)
	
	f32 = new File()
	sprint(filename32,"waves/kahslope_july.txt")
	f32.ropen(filename32)
	v32 = new Vector()
	v32.scanf(f32)
		
	f33 = new File()
	sprint(filename33,"waves/kahfactor_july.txt")
	f33.ropen(filename33)		
	v33 = new Vector()
	v33.scanf(f33)
				
	f34 = new File()
	sprint(filename34,"waves/gHVA_july.txt")
	f34.ropen(filename34)
	v34 = new Vector()
	v34.scanf(f34)
	
	f35 = new File()
	sprint(filename35,"waves/hvamvhalf_july.txt")
	f35.ropen(filename35)
	v35 = new Vector()
	v35.scanf(f35)
	
	f36 = new File()
	sprint(filename36,"waves/hvamslope_july.txt")
	f36.ropen(filename36)
	v36 = new Vector()
	v36.scanf(f36)
	
	f37 = new File()
	sprint(filename37,"waves/hvamfactor_july.txt")
	f37.ropen(filename37)
	v37 = new Vector()
	v37.scanf(f37)
	
	f38 = new File()
	sprint(filename38,"waves/hvahvhalf_july.txt")
	f38.ropen(filename38)
	v38 = new Vector()
	v38.scanf(f38)
	
	f39 = new File()
	sprint(filename39,"waves/hvahslope_july.txt")
	f39.ropen(filename39)
	v39 = new Vector()
	v39.scanf(f39)
		
	f40 = new File()
	sprint(filename40,"waves/hvahfactor_july.txt")
	f40.ropen(filename40)
	v40 = new Vector()
	v40.scanf(f40)
		
	f41 = new File()
	sprint(filename41,"waves/gLVA_july.txt")
	f41.ropen(filename41)
	v41 = new Vector()
	v41.scanf(f41)
	
	f42 = new File()
	sprint(filename42,"waves/lvamvhalf_july.txt")
	f42.ropen(filename42)
	v42 = new Vector()
	v42.scanf(f42)
	
	f43 = new File()
	sprint(filename43,"waves/lvamslope_july.txt")
	f43.ropen(filename43)
	v43 = new Vector()
	v43.scanf(f43)
	
	f44 = new File()
	sprint(filename44,"waves/lvamfactor_july.txt")
	f44.ropen(filename44)
	v44 = new Vector()
	v44.scanf(f44)
	
	f45 = new File()
	sprint(filename45,"waves/lvahvhalf_july.txt")
	f45.ropen(filename45)
	v45 = new Vector()
	v45.scanf(f45)
	
	f46 = new File()
	sprint(filename46,"waves/lvahslope_july.txt")
	f46.ropen(filename46)
	v46 = new Vector()
	v46.scanf(f46)
		
	f47 = new File()
	sprint(filename47,"waves/lvahfactor_july.txt")
	f47.ropen(filename47)
	v47 = new Vector()
	v47.scanf(f47)
		
	f48 = new File()
	sprint(filename48,"waves/gKM_july.txt")
	f48.ropen(filename48)
	v48 = new Vector()
	v48.scanf(f48)
	
	f49 = new File()
	sprint(filename49,"waves/kmvhalfl_july.txt")
	f49.ropen(filename49)
	v49 = new Vector()
	v49.scanf(f49)
	
	f50 = new File()
	sprint(filename50,"waves/kmkl_july.txt")
	f50.ropen(filename50)
	v50 = new Vector()
	v50.scanf(f50)
		
	f51 = new File()
	sprint(filename51,"waves/kmmfactor_july.txt")
	f51.ropen(filename51)
	v51 = new Vector()
	v51.scanf(f51)
	
	f52 = new File()
	sprint(filename52,"waves/gSK_july.txt")
	f52.ropen(filename52)
	v52 = new Vector()
	v52.scanf(f52)
	
	f53 = new File()
	sprint(filename53,"waves/gRM_july.txt")
	f53.ropen(filename53)
	v53 = new Vector()
	v53.scanf(f53)
	
	f54 = new File()
	sprint(filename54,"waves/gTauca_july.txt")
	f54.ropen(filename54)
	v54 = new Vector()
	v54.scanf(f54)	
	
	f55 = new File()
	sprint(filename55,"waves/CM_july.txt")
	f55.ropen(filename55)
	v55 = new Vector()
	v55.scanf(f55)	
}	
/**************************************************************/

// Procedure to run Oscillation on GSA valid model

objref f56, v56

//	f56 = new File()
//	f56.ropen("Output/valid_res.txt")
//	v56 = new Vector()
//	v56.scanf(f56)

proc Final_run(){ local j
	 
		j=$1
		simulno	 = j
		open_files()
		
		gnafbar		= v1.get(j)
		nafmvhalf	= v2.get(j)
		nafmslope	= v3.get(j)
		nafmfactor  = v4.get(j)		
		nafhvhalf	= v5.get(j)
		nafhslope	= v6.get(j)
		nafhfactor  = v7.get(j)
		
		gkdrbar		= v8.get(j)
		kdrnvhalf	= v9.get(j)
		kdrnslope	= v10.get(j)
		kdrnfactor  = v11.get(j)				

		ghcnsbar	= v12.get(j)
		hcnratio	= v13.get(j)
		hcnmifo		= v14.get(j)
		hcnmiso		= v15.get(j)
		hcnmifd		= v16.get(j)		
		hcnmisd		= v17.get(j)
		hcnffactor	= v18.get(j)
		hcnsfactor  = v19.get(j)		
		
		gnapbar		= v20.get(j)
		napmvhalf	= v21.get(j)
		napmslope	= v22.get(j)
		napmfactor	= v23.get(j)		
		naphvhalf	= v24.get(j)
		naphslope	= v25.get(j)
		naphfactor  = v26.get(j)
		
		
		gkabar		= v27.get(j)
		kamvhalf	= v28.get(j)
		kamslope	= v29.get(j)
		kamfactor	= v30.get(j)		
		kahvhalf	= v31.get(j)
		kahslope	= v32.get(j)
		kahfactor   = v33.get(j)		
		
		ghvabar		= v34.get(j)
		hvamvhalf	= v35.get(j)
		hvamslope	= v36.get(j)
		hvamfactor	= v37.get(j)		
		hvahvhalf	= v38.get(j)
		hvahslope	= v39.get(j)
		hvahfactor  = v40.get(j)
		
		glvabar		= v41.get(j)
		lvamvhalf	= v42.get(j)
		lvamslope	= v43.get(j)
		lvamfactor	= v44.get(j)		
		lvahvhalf	= v45.get(j)
		lvahslope	= v46.get(j)
		lvahfactor  = v47.get(j)	
		
		gkmbar		= v48.get(j)
		kmvhalfl	= v49.get(j)
		kmkl		= v50.get(j)
		kmmfactor	= v51.get(j)		
		
		gskbar		= v52.get(j)
		
		Rm			= v53.get(j)
		
		tauca		= v54.get(j)
		
		CM			= v55.get(j)

		
// updating all the parameters
		
		update_gnafbar()
		update_nafmvhalf()
		update_nafmslope()
		update_nafmfactor()
		update_nafhvhalf()
		update_nafhslope()
		update_nafhfactor()
		
		update_gkdrbar()
		update_kdrnvhalf()
		update_kdrnslope()
		update_kdrnfactor()
		
		update_ghcnsbar()
		update_hcnratio()
		update_hcnmifo()
		update_hcnmiso()
		update_hcnmifd()
		update_hcnmisd()
		update_hcnffactor()
		update_hcnsfactor()

		update_gnapbar()
		update_napmvhalf()
		update_napmslope()
		update_napmfactor()
		update_naphvhalf()
		update_naphslope()
		update_naphfactor()		
		
		update_gkabar()
		update_kamvhalf()
		update_kamslope()
		update_kamfactor()
		update_kahvhalf()
		update_kahslope()
		update_kahfactor()		
		
		update_ghvabar()
		update_hvamvhalf()
		update_hvamslope()
		update_hvamfactor()
		update_hvahvhalf()
		update_hvahslope()
		update_hvahfactor()		
		
		update_glvabar()
		update_lvamvhalf()
		update_lvamslope()
		update_lvamfactor()
		update_lvahvhalf()
		update_lvahslope()
		update_lvahfactor()		
		
		update_gkmbar()
		update_kmvhalfl()
		update_kmkl()
		update_kmmfactor()
		
		update_gskbar()
		
		update_gpas()
		
		update_tauca()
		
		update_CM()		
		
		// Function calling
		
		//Osc_run()
}		

Final_run(24)

		